import{_ as s,c as n,b as e,o as t}from"./app-CTs8QVok.js";const p="/blog/assets/rag_chroma_server-BuRCit5T.png",l={};function r(o,a){return t(),n("div",null,a[0]||(a[0]=[e(`<h1 id="chroma" tabindex="-1"><a class="header-anchor" href="#chroma"><span>Chroma</span></a></h1><div class="hint-container tip"><p class="hint-container-title">提示</p><p><a href="https://docs.trychroma.com/docs/overview/introduction" target="_blank" rel="noopener noreferrer">Chroma 文档</a></p></div><h2 id="准备" tabindex="-1"><a class="header-anchor" href="#准备"><span>准备</span></a></h2><p>执行此命令安装<code>chroma</code>包：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">$ pip <span class="token function">install</span> chromadb</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><h2 id="客户端" tabindex="-1"><a class="header-anchor" href="#客户端"><span>客户端</span></a></h2><p><code>Chroma</code>中的客户端一份分为如下几种类型：</p><ul><li><strong>临时客户端(Ephemeral Client)</strong>：数据存储在本地内存中，适合快速严重一些特性。</li><li><strong>持久化客户端(Persistent Client)</strong>：数据存储在本地硬盘中，在<code>Chroma</code>其中时自动加载硬盘已经存储的数据。</li><li><strong>客户端-服务端模式(Client Server Mode)</strong>：服务端和客户端可分离。</li></ul><h3 id="临时客户端" tabindex="-1"><a class="header-anchor" href="#临时客户端"><span>临时客户端</span></a></h3><p>通过如下代码创建临时客户端：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">import</span> chromadb</span>
<span class="line"></span>
<span class="line">client <span class="token operator">=</span> chromadb<span class="token punctuation">.</span>EphemeralClient<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><h3 id="持久化客户端" tabindex="-1"><a class="header-anchor" href="#持久化客户端"><span>持久化客户端</span></a></h3><p>通过如下代码创建持久化客户端：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">import</span> chromadb</span>
<span class="line"></span>
<span class="line">client <span class="token operator">=</span> chromadb<span class="token punctuation">.</span>PersistentClient<span class="token punctuation">(</span></span>
<span class="line">  path<span class="token operator">=</span><span class="token string">&quot;./data&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><p>上述代码执行后会创建一个本地<code>db</code>：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token operator">|</span> - data</span>
<span class="line"><span class="token operator">|</span> - <span class="token operator">|</span> - chroma.sqlite3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><h3 id="服务端-客户端模式" tabindex="-1"><a class="header-anchor" href="#服务端-客户端模式"><span>服务端-客户端模式</span></a></h3><p>通过如下代码启动服务端：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># 默认端口和host</span></span>
<span class="line">$ chroma run <span class="token parameter variable">--path</span> /db_path</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 自定义端口和host</span></span>
<span class="line">$ chroma run <span class="token parameter variable">--host</span> localhost <span class="token parameter variable">--port</span> <span class="token number">80000</span> <span class="token parameter variable">--path</span> /db_path</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><p><img src="`+p+`" alt="Chroma Server"></p><p>通过如下代码链接服务端：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">import</span> chromadb</span>
<span class="line"></span>
<span class="line">client <span class="token operator">=</span> chromadb<span class="token punctuation">.</span>HttpClient<span class="token punctuation">(</span></span>
<span class="line">  host<span class="token operator">=</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  port<span class="token operator">=</span><span class="token number">8080</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div>`,22)]))}const i=s(l,[["render",r]]),d=JSON.parse('{"path":"/rag/vectorStore/chroma/","title":"Chroma","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1748623235000,"contributors":[{"name":"wangtunan","username":"wangtunan","email":"why583440138@gmail.com","commits":1,"url":"https://github.com/wangtunan"}],"changelog":[{"hash":"650cd2b9f76950464baaa8c7ae78e1777342b6ca","time":1748623235000,"email":"why583440138@gmail.com","author":"wangtunan","message":"blog RAG结构化文档向量存储文章撰写"}]},"filePathRelative":"rag/vectorStore/chroma/README.md"}');export{i as comp,d as data};
