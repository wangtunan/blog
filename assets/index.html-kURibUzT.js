import{_ as t,r as o,o as e,c as p,a as n,b as s,e as c,d as l}from"./app-uNwr8cV-.js";const u={},i=n("h1",{id:"简单",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#简单","aria-hidden":"true"},"#"),s(" 简单")],-1),r=n("h2",{id:"_41-数据流中的移动平均值",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_41-数据流中的移动平均值","aria-hidden":"true"},"#"),s(" 41.数据流中的移动平均值")],-1),k={class:"custom-container tip"},d=n("p",{class:"custom-container-title"},"TIP",-1),_=n("strong",null,"要求",-1),h=n("br",null,null,-1),m=n("strong",null,"输入",-1),f=n("br",null,null,-1),v=n("br",null,null,-1),g=n("br",null,null,-1),x=n("strong",null,"输出",-1),y=n("br",null,null,-1),w=n("strong",null,"说明",-1),b=n("br",null,null,-1),q=n("strong",null,"原题链接",-1),z={href:"https://leetcode.cn/problems/qIsx9U",target:"_blank",rel:"noopener noreferrer"},I=l(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// n为窗口大小size</span>
<span class="token comment">// 时间复杂度：O(1)，next时往数组尾部添加元素，时间复杂度O(1)</span>
<span class="token comment">// 空间复杂度：O(n)，队列数组的内存开销</span>
<span class="token keyword">var</span> <span class="token function-variable function">MovingAverage</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">size</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> size
  <span class="token keyword">this</span><span class="token punctuation">.</span>sum <span class="token operator">=</span> <span class="token number">0</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">MovingAverage</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">next</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span>length <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>sum <span class="token operator">-=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>sum <span class="token operator">+=</span> val
  <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sum <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span>length
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div>`,1);function N(V,j){const a=o("ExternalLinkIcon");return e(),p("div",null,[i,r,n("div",k,[d,n("p",null,[_,s("：给定一个窗口大小和一个整数数据流，根据该滑动窗口的大小，计算滑动窗口里所有数字的平均值。"),h,m,s("："),f,s(' inputs = ["MovingAverage", "next", "next", "next", "next"]'),v,s(" inputs = [[3], [1], [10], [3], [5]]"),g,x,s("：[null, 1.0, 5.5, 4.66667, 6.0]"),y,w,s("：给定一个固定长度的数组，其中数组中的值是固定的，求此数组中元素的平均值。"),b,q,s("："),n("a",z,[s("41.数据流中的移动平均值"),c(a)])])]),I])}const B=t(u,[["render",N],["__file","index.html.vue"]]);export{B as default};
