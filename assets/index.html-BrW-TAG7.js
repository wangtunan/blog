import{_ as s,c as a,b as t,o as p}from"./app-ug_sVrMA.js";const o={};function e(c,n){return p(),a("div",null,n[0]||(n[0]=[t(`<h1 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h1><h2 id="向量" tabindex="-1"><a class="header-anchor" href="#向量"><span>向量</span></a></h2><h3 id="向量和标量" tabindex="-1"><a class="header-anchor" href="#向量和标量"><span>向量和标量</span></a></h3><p><strong>向量(Vector)</strong>：是一个有方向和大小的量，常以一组有序的浮点数组来表示，例如：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line">vector <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">0.05</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><p><strong>标量(Scalar)</strong>：是一个只有大小，没有方向的量(例如，温度，质量)。</p><h3 id="向量的分类" tabindex="-1"><a class="header-anchor" href="#向量的分类"><span>向量的分类</span></a></h3><p>向量按存储内容可分为：</p><ul><li><strong>数值向量</strong>：包含纯数字。</li><li><strong>特征向量</strong>：表示对象特征的数值。</li><li><strong>词向量</strong>：表示词语语义。</li></ul><h3 id="向量的运算" tabindex="-1"><a class="header-anchor" href="#向量的运算"><span>向量的运算</span></a></h3><p>向量之间可以进行运算：</p><ul><li>加法：对应的分量相加，例如：<code>[a1, a2] + [b1, b2] = [a1 + b1, a2 + b2]</code>。</li><li>数乘：标量乘以向量的每一个分量，例如：<code>k * [v1, v2] = [v1 * k, v2 * k]</code>。</li><li>点积：两个向量中，对应的每一个分量相乘，最后求和，例如：<code>[a1, a2] * [b1, b2] = a1 * b1 + a2 * b2</code>。</li><li>余弦相似度：求<code>cos</code>。</li><li>欧氏距离：求<code>d(a,b)</code>。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"></span>
<span class="line">a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">k <span class="token operator">=</span> <span class="token number">2</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 向量的加法</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span> <span class="token comment"># 输出[5 7 9]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 数乘</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>k <span class="token operator">*</span> a<span class="token punctuation">)</span> <span class="token comment"># 输出[2 4 6]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 点积</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 输出32</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 余弦相似度</span></span>
<span class="line">cos_sim <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>cos_sim<span class="token punctuation">)</span> <span class="token comment"># 输出0.9746318461970762</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 欧氏距离</span></span>
<span class="line">euclidean_dist <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>a <span class="token operator">-</span> b<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>euclidean_dist<span class="token punctuation">)</span> <span class="token comment"># 输出5.196152422706632</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><h2 id="向量数据库" tabindex="-1"><a class="header-anchor" href="#向量数据库"><span>向量数据库</span></a></h2><p><strong>向量数据库(Vector DB)</strong>：是一种专门用于存储、索引和查询向量数据（高维数值数组）的数据库系统。与传统数据库基于精确匹配的查询方式不同，向量数据库通过计算向量之间的相似度来检索数据，这使得它特别适合处理非结构化数据（如图像、文本、音频等）的相似性搜索。</p><h3 id="核心功能" tabindex="-1"><a class="header-anchor" href="#核心功能"><span>核心功能</span></a></h3><p>其核心功能如下：</p><ul><li><strong>向量操作</strong>：支持向量插入/更新/删除。</li><li><strong>近似最近邻(ANN)搜索</strong>：在精度和性能之间取得平衡的搜索算法。</li><li><strong>向量相似性搜索</strong>：基于余弦相似度、欧氏距离或内积等度量方式。</li><li><strong>索引构建与压缩</strong>：构建如 <code>HNSW</code>、<code>IVF</code>、<code>PQ</code> 等索引结构。</li><li><strong>高维数据处理</strong>：能够有效处理数百至数千维的数据。</li><li><strong>与结构化数据关联</strong>：支持元数据存储与联合查询。</li><li><strong>大规模数据处理</strong>：支持数十亿级别的向量高效检索。</li></ul><h3 id="主流向量数据库对比" tabindex="-1"><a class="header-anchor" href="#主流向量数据库对比"><span>主流向量数据库对比</span></a></h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p><a href="https://python.langchain.com/docs/integrations/vectorstores/" target="_blank" rel="noopener noreferrer">LangChain官方 向量存储方案对比</a> <br><a href="https://ann-benchmarks.com/index.html" target="_blank" rel="noopener noreferrer">向量数据库Benchmark对比</a></p></div><table><thead><tr><th>向量数据库</th><th>原生向量支持</th><th>是否开源</th><th>是否分布式</th><th>特点/优势</th><th>缺陷不足</th><th>典型适用场景</th></tr></thead><tbody><tr><td><strong>Milvus</strong></td><td>是</td><td>是</td><td>是</td><td>企业级、分布式、支持亿级数据量</td><td>资源需求高，部署复杂</td><td>图像搜索、推荐系统</td></tr><tr><td><strong>Qdrant</strong></td><td>是</td><td>是</td><td>是</td><td>REST/gRPC、支持过滤、异步搜索</td><td>较新项目、生态不如 Milvus 全</td><td>向量+元数据混合过滤</td></tr><tr><td><strong>Weaviate</strong></td><td>是</td><td>是</td><td>是</td><td>GraphQL 接口，支持嵌入生成和元数据联查</td><td>容器部署稍重</td><td>语义搜索、问答系统</td></tr><tr><td><strong>Pinecone</strong></td><td>是</td><td>否</td><td>是</td><td>商业实现，全托管、免维护、上线快</td><td>付费、不可私有部署</td><td>快速开发、MVP、原型验证</td></tr><tr><td><strong>Faiss</strong></td><td>是</td><td>是</td><td>否</td><td>高性能 ANN 算法库，支持多种索引，学术界流行</td><td>无服务层、不分布式</td><td>离线处理、研究、原型验证</td></tr><tr><td><strong>Chroma</strong></td><td>是</td><td>是</td><td>否</td><td>零配置、本地知识库友好</td><td>不支持 ANN、大数据不适用</td><td>轻量 RAG、个人项目</td></tr><tr><td><strong>Redis</strong></td><td><code>7.0+</code>支持</td><td>是</td><td>是</td><td>极低延迟，实时向量搜索</td><td>内存占用高、不适合超大规模</td><td>实时推荐、个性化问答</td></tr><tr><td><strong>MongoDB</strong></td><td><code>5.0+</code>支持</td><td>是</td><td>是</td><td>适合文档+语义联合搜索</td><td>向量维度限制、功能有限</td><td>文档搜索、轻量语义搜索</td></tr><tr><td><strong>PGVector</strong></td><td>扩展形式</td><td>是</td><td>否</td><td>原生 SQL 接口</td><td>单机性能有限，写入慢</td><td>企业集成、轻量向量搜索</td></tr><tr><td><strong>Elasticsearch</strong></td><td><code>8.0+</code>支持</td><td>是</td><td>是</td><td>全文+向量混合检索</td><td>向量维度低（768 默认）、性能中等</td><td>多模态搜索、有 ES 基础场景</td></tr></tbody></table>`,21)]))}const d=s(o,[["render",e]]),r=JSON.parse('{"path":"/rag/vectorStore/","title":"介绍","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1748271331000,"contributors":[{"name":"wangtunan","username":"wangtunan","email":"why583440138@gmail.com","commits":1,"url":"https://github.com/wangtunan"}],"changelog":[{"hash":"74c8bf57080593fba5e75b94a6f446cf86a12560","time":1748271331000,"email":"why583440138@gmail.com","author":"wangtunan","message":"blog RAG结构化文档向量文章撰写"}]},"filePathRelative":"rag/vectorStore/README.md"}');export{d as comp,r as data};
