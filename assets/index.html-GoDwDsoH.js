import{_ as o,c,b as t,o as d}from"./app-DK3FZFZ6.js";const i={};function l(a,e){return d(),c("div",null,e[0]||(e[0]=[t('<h1 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h1><p>在<code>Vuex</code>官网中它有这样一段话：<strong>Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。</strong></p><p>借用一张<code>Vuex</code>官网中一张关于其状态管理的流程图：</p><div style="text-align:center;"><img src="https://vuex.vuejs.org/vuex.png" alt="Vuex数据状态管理流程图"></div><p>在分析<code>Vuex</code>源码章节，我们会按照<code>Vuex</code>的安装、<code>Vuex</code>的初始化、<code>Vuex</code>提供的辅助<code>API</code>以及<code>Store</code>实例<code>API</code>这几个模块来进行说明，其中最后几个模块是重点。</p><p><strong>Vuex初始化</strong>：</p><ol><li><code>State</code>初始化。</li><li><code>Mutations</code>初始化。</li><li><code>Actions</code>初始化。</li><li><code>Getters</code>初始化和响应式。</li><li><code>Modules</code>初始化。</li></ol><p><strong>Vuex</strong>辅助<code>API</code>设计：</p><ol><li><code>createNamespacedHelpers</code>设计原理。</li><li><code>mapState</code>设计原理。</li><li><code>mapMutations</code>设计思想。</li><li><code>mapActions</code>设计思想。</li></ol><p><strong>Store</strong>实例<code>API</code>设计：</p><ol><li><code>commit</code>设计思想。</li><li><code>dispatch</code>设计思想。</li><li><code>subscribe</code>设计思想。</li><li><code>subscribeAction</code>设计思想。</li><li><code>registerModule</code>设计思想。</li><li><code>unregisterModule</code>设计思想。</li></ol>',11)]))}const n=o(i,[["render",l]]),r=JSON.parse('{"path":"/vueAnalysis/vuex/","title":"介绍","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1745852628000,"contributors":[{"name":"wangtunan","username":"wangtunan","email":"why583440138@gmail.com","commits":1,"url":"https://github.com/wangtunan"}],"changelog":[{"hash":"e1c62d225a9dba79e5867f015131ab8661257b81","time":1745852628000,"email":"why583440138@gmail.com","author":"wangtunan","message":"blog RAG基础文章撰写"}]},"filePathRelative":"vueAnalysis/vuex/README.md"}');export{n as comp,r as data};
