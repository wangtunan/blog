import{_ as p,c as t,a as s,e,b as o,r as c,o as l}from"./app-DwJCNpkR.js";const u={};function i(k,n){const a=c("leetcode-link");return l(),t("div",null,[n[0]||(n[0]=s("h1",{id:"简单",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#简单"},[s("span",null,"简单")])],-1)),n[1]||(n[1]=s("h2",{id:"_41-数据流中的移动平均值",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_41-数据流中的移动平均值"},[s("span",null,"41.数据流中的移动平均值")])],-1)),e(a,{title:"41.数据流中的移动平均值",link:"https://leetcode.cn/problems/qIsx9U"}),n[2]||(n[2]=o(`<div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// n为窗口大小size</span></span>
<span class="line"><span class="token comment">// 时间复杂度：O(1)，next时往数组尾部添加元素，时间复杂度O(1)</span></span>
<span class="line"><span class="token comment">// 空间复杂度：O(n)，队列数组的内存开销</span></span>
<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">MovingAverage</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">size</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">this</span><span class="token punctuation">.</span>queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> size<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">this</span><span class="token punctuation">.</span>sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">MovingAverage</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">next</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span>length <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>sum <span class="token operator">-=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">this</span><span class="token punctuation">.</span>sum <span class="token operator">+=</span> val<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sum <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span>length<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div>`,1))])}const d=p(u,[["render",i]]),m=JSON.parse('{"path":"/algorithm/leetcode/queue/easy/","title":"简单","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1748665574000,"contributors":[{"name":"wangtunan","username":"wangtunan","email":"why583440138@gmail.com","commits":1,"url":"https://github.com/wangtunan"}],"changelog":[{"hash":"d9a51754cfe081d11c1cf42fff7a334b6910ce57","time":1748665574000,"email":"why583440138@gmail.com","author":"wangtunan","message":"blog RAG结构化文档向量存储文章撰写"}]},"filePathRelative":"algorithm/leetcode/queue/easy/README.md"}');export{d as comp,m as data};
