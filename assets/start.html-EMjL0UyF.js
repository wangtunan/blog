import{_ as n,c as p,b as e,o as t}from"./app-OZJ_mqn6.js";const a="/blog/assets/5-DHygTr9k.png",o="/blog/assets/6-D_ZOwF8l.png",c={};function l(i,s){return t(),p("div",null,s[0]||(s[0]=[e(`<h1 id="起步" tabindex="-1"><a class="header-anchor" href="#起步"><span>起步</span></a></h1><h2 id="创建项目结构" tabindex="-1"><a class="header-anchor" href="#创建项目结构"><span>创建项目结构</span></a></h2><p>现在我们来创建基本的项目结构，它可能是下面这样</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token operator">|</span>-- webpack-vuepress</span>
<span class="line"><span class="token operator">|</span>   <span class="token operator">|</span>-- index.html</span>
<span class="line"><span class="token operator">|</span>   <span class="token operator">|</span>-- index.js</span>
<span class="line"><span class="token operator">|</span>   <span class="token operator">|</span>-- package.json</span>
<span class="line"></span></code></pre></div><p>其中<code>package.json</code>是利用下面的命令自动生成的配置文件</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">$ <span class="token function">npm</span> init <span class="token parameter variable">-y</span></span>
<span class="line"></span></code></pre></div><h2 id="添加基础代码" tabindex="-1"><a class="header-anchor" href="#添加基础代码"><span>添加基础代码</span></a></h2><p>在创建了基本的项目结构以后，我们需要为我们创建的文件添加一些代码<br></p><p><code>index.html</code>页面中的代码：</p><div class="language-html" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>这是最原始的网页内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token comment">&lt;!-- 引用打包后的js文件 --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./dist/main.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre></div><p><code>index.js</code>文件中的代码：</p><div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello,world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h2 id="安装webpack" tabindex="-1"><a class="header-anchor" href="#安装webpack"><span>安装Webpack</span></a></h2><p>运行如下命令安装<code>webpack4.0+</code>和<code>webpack-cli</code>：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">$ <span class="token function">npm</span> <span class="token function">install</span> webpack webpack-cli <span class="token parameter variable">-D</span></span>
<span class="line"></span></code></pre></div><h2 id="添加配置文件" tabindex="-1"><a class="header-anchor" href="#添加配置文件"><span>添加配置文件</span></a></h2><p>使用如下命令添加 Webpack 配置文件：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">$ <span class="token function">touch</span> webpack.config.js</span>
<span class="line"></span></code></pre></div><p>使用此命令，变更后的项目结构大概如下所示：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token operator">|</span>-- webpack-vuepress</span>
<span class="line"><span class="token operator">|</span>   <span class="token operator">|</span>-- index.html</span>
<span class="line"><span class="token operator">|</span>   <span class="token operator">|</span>-- index.js</span>
<span class="line"><span class="token operator">|</span>   <span class="token operator">|</span>-- webpack.config.js</span>
<span class="line"><span class="token operator">|</span>   <span class="token operator">|</span>-- package.json</span>
<span class="line"></span></code></pre></div><p>至此我们的基础目录已创建完毕，接下来需要改写<code>webpack.config.js</code>文件，它的代码如下：</p><div class="hint-container tip"><p class="hint-container-title">解释</p><ol><li><code>entry</code>配置项说明了<code>webpack</code>打包的入口文件。</li><li><code>output</code>配置项说明了<code>webpack</code>输出配置：<code>filename</code>配置了打包后的文件叫<code>main.js</code></li><li><code>path</code>配置了打包后的输出目录为<code>dist</code>文件夹下</li></ol></div><div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// path为Node的核心模块</span></span>
<span class="line"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;./index.js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;main.js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h2 id="改写package-json文件" tabindex="-1"><a class="header-anchor" href="#改写package-json文件"><span>改写package.json文件</span></a></h2><div class="hint-container tip"><p class="hint-container-title">改写说明</p><ol><li>添加<code>private</code>属性并设置为<code>true</code>：此属性能让我们的项目为私有的，防止意外发布代码</li><li>移除<code>main</code>属性：我们的项目并不需要对外暴露一个入口文件</li><li>添加<code>scripts</code>命令：即我们的打包命令</li></ol></div><p>改写后的<code>package.json</code>文件如下所示：</p><div class="language-json" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack-vuepress&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line highlighted">  <span class="token property">&quot;private&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">    <span class="token property">&quot;bundle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ISC&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;devDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;webpack&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.31.0&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;webpack-cli&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.3.2&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h2 id="第一次打包" tabindex="-1"><a class="header-anchor" href="#第一次打包"><span>第一次打包</span></a></h2><div class="hint-container tip"><p class="hint-container-title">命令说明</p><p><code>npm run</code>代表运行一个脚本命令，而<code>bundle</code>就是我们配置的打包命令，即<code>npm run bundle</code>就是我们配置的<code>webpack</code>打包命令。</p></div><p>运行如下命令进行项目打包：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">$ <span class="token function">npm</span> run bundle</span>
<span class="line"></span></code></pre></div><p>打包后的效果如下所示：</p><p><img src="`+a+`" alt="第一次打包后的效果"></p><p>打包后的项目目录如下所示，可以看到我们多出了一个叫<code>dist</code>的目录，它里面有一个<code>main.js</code>文件</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token operator">|</span>-- webpack-vuepress</span>
<span class="line"><span class="token operator">|</span>   <span class="token operator">|</span>-- dist</span>
<span class="line"><span class="token operator">|</span>   <span class="token operator">|</span>   <span class="token operator">|</span>-- main.js</span>
<span class="line"><span class="token operator">|</span>   <span class="token operator">|</span>-- index.html</span>
<span class="line"><span class="token operator">|</span>   <span class="token operator">|</span>-- index.js</span>
<span class="line"><span class="token operator">|</span>   <span class="token operator">|</span>-- webpack.config.js</span>
<span class="line"><span class="token operator">|</span>   <span class="token operator">|</span>-- package.json</span>
<span class="line"></span></code></pre></div><p>打包成功后，我们需要在浏览器中运行<code>index.html</code>，它的运行结果如下图所示：</p><p><img src="`+o+'" alt="第一次打包后的效果"></p><h2 id="理解webpack打包输出" tabindex="-1"><a class="header-anchor" href="#理解webpack打包输出"><span>理解webpack打包输出</span></a></h2><p>在前面，我们第一次运行了一个打包命令，它在控制台上有一些输出内容，这一节我们详细来介绍这些输出是什么意思：</p><p><img src="'+a+`" alt="第一次打包后的效果"></p><ol><li><p><strong>Hash：</strong> <code>hash</code>代表本次打包的唯一<code>hash</code>值，每一次打包此值都是不一样的</p></li><li><p><strong>Version：</strong> 详细展示了我们使用<code>webpack</code>的版本号</p></li><li><p><strong>Time：</strong> 代表我们本次打包的耗时</p></li><li><p><strong>Asset：</strong> 代表我们打包出的文件名称</p></li><li><p><strong>Size：</strong> 代表我们打包出的文件的大小</p></li><li><p><strong>Chunks：</strong> 代表打包后的<code>.js</code>文件对应的<code>id</code>，<code>id</code>从<code>0</code>开始，依次往后<code>+1</code></p></li><li><p><strong>Chunks Names：</strong> 代表我们打包后的<code>.js</code>文件的名字，至于为何是<code>main</code>，而不是其他的内容，这是因为在我们的<code>webpack.config.js</code>中，<code>entry:&#39;./index.js&#39;</code>是对如下方式的简写形式：</p></li></ol><div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// path为Node的核心模块</span></span>
<span class="line"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// entry: &#39;./index.js&#39;,</span></span>
<span class="line">  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">main</span><span class="token operator">:</span> <span class="token string">&#39;./index.js&#39;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token comment">// 其它配置</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><ol start="8"><li><p><strong>Entrypoint main = bundle.js：</strong> 代表我们打包的入口为<code>main</code></p></li><li><p><strong>warning in configuration：</strong> 提示警告，意思是我们没有给<code>webpack.config.js</code>设置<code>mode</code>属性，<code>mode</code>属性有三个值：<code>development</code>代表开发环境、<code>production</code>代表生产环境、<code>none</code>代表既不是开发环境也不是生产环境。如果不写的话，默认是生产环境，可在配置文件中配置此项，配置后再次打包将不会再出现此警告。</p></li></ol><div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// path为Node的核心模块</span></span>
<span class="line"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 其它配置</span></span>
<span class="line">  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;development&#39;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div>`,44)]))}const u=n(c,[["render",l]]),d=JSON.parse('{"path":"/webpack/webpack/start.html","title":"起步","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1748667955000,"contributors":[{"name":"wangtunan","username":"wangtunan","email":"why583440138@gmail.com","commits":1,"url":"https://github.com/wangtunan"}],"changelog":[{"hash":"4cae81a7be7882437e8f42d6762dbb92aa7d76e8","time":1748667955000,"email":"why583440138@gmail.com","author":"wangtunan","message":"blog RAG结构化文档向量存储文章撰写"}]},"filePathRelative":"webpack/webpack/start.md"}');export{u as comp,d as data};
