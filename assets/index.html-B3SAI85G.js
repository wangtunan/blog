import{_ as s,c as a,b as e,o as t}from"./app-Dz7roTH4.js";const p={};function l(c,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="分块方法" tabindex="-1"><a class="header-anchor" href="#分块方法"><span>分块方法</span></a></h1><h2 id="按固定字符数分块" tabindex="-1"><a class="header-anchor" href="#按固定字符数分块"><span>按固定字符数分块</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p><a href="https://python.langchain.com/api_reference/text_splitters/character/langchain_text_splitters.character.CharacterTextSplitter.html" target="_blank" rel="noopener noreferrer">CharacterTextSplitter 文档</a></p></div><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> langchain_community<span class="token punctuation">.</span>document_loaders <span class="token keyword">import</span> TextLoader</span>
<span class="line"><span class="token keyword">from</span> langchain_text_splitters <span class="token keyword">import</span> CharacterTextSplitter</span>
<span class="line"></span>
<span class="line">data_loader <span class="token operator">=</span> TextLoader<span class="token punctuation">(</span></span>
<span class="line">  file_path<span class="token operator">=</span><span class="token string">&quot;data/山西文旅/云冈石窟.txt&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">documents <span class="token operator">=</span> data_loader<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">splitter <span class="token operator">=</span> CharacterTextSplitter<span class="token punctuation">(</span></span>
<span class="line">  chunk_size<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token comment"># 每个chunk的大小</span></span>
<span class="line">  chunk_overlap<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token comment"># 每个chunk的overlap</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">chunks <span class="token operator">=</span> splitter<span class="token punctuation">.</span>split_documents<span class="token punctuation">(</span>documents<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n========= 文档分块结果 =========&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">for</span> i<span class="token punctuation">,</span> chunk <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>chunks<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;内容: </span><span class="token interpolation"><span class="token punctuation">{</span>chunk<span class="token punctuation">.</span>page_content<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;=&quot;</span> <span class="token operator">*</span> <span class="token number">50</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4)]))}const o=s(p,[["render",l]]),r=JSON.parse('{"path":"/rag/chunking/methods/","title":"分块方法","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1747842697000,"contributors":[{"name":"wangtunan","username":"wangtunan","email":"why583440138@gmail.com","commits":1,"url":"https://github.com/wangtunan"}],"changelog":[{"hash":"ead5c1834fec341560660ae3b4a3ed2498a91f6a","time":1747842697000,"email":"why583440138@gmail.com","author":"wangtunan","message":"blog RAG结构化文档分块文章撰写"}]},"filePathRelative":"rag/chunking/methods/README.md"}');export{o as comp,r as data};
