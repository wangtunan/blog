import{_ as r,r as t,o as i,c as s,a as o,b as d,e as n,d as u}from"./app-ce05a687.js";const a={},V={href:"https://coding.imooc.com/class/228.html",target:"_blank",rel:"noopener noreferrer"},c={href:"https://www.ituring.com.cn/book/2675",target:"_blank",rel:"noopener noreferrer"},p={href:"https://github.com/snabbdom/snabbdom",target:"_blank",rel:"noopener noreferrer"};function b(m,e){const l=t("ExternalLinkIcon");return i(),s("div",null,[e[15]||(e[15]=o("h1",{id:"介绍和参考",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#介绍和参考","aria-hidden":"true"},"#"),d(" 介绍和参考")],-1)),o("p",null,[e[2]||(e[2]=d("本篇")),e[3]||(e[3]=o("code",null,"Vue2.6.11",-1)),e[4]||(e[4]=d("源码分析文章由观看")),o("a",V,[e[0]||(e[0]=d("Vue.js源码全方位深入解析")),n(l)]),e[5]||(e[5]=d("视频，阅读")),o("a",c,[e[1]||(e[1]=d("深入浅出Vue.js")),n(l)]),e[6]||(e[6]=d("书籍以及参考其他")),e[7]||(e[7]=o("code",null,"Vue",-1)),e[8]||(e[8]=d("源码分析博客而来，阅读视频和书籍请支持正版。"))]),e[16]||(e[16]=u('<h2 id="vue发展简史" tabindex="-1"><a class="header-anchor" href="#vue发展简史" aria-hidden="true">#</a> Vue发展简史</h2><ul><li>2013年7月，<code>Vue.js</code>在<code>Github</code>上第一次提交，此时名字叫做<code>Element</code>，后来被改名为<code>Seed.js</code>，到现在的<code>Vue.js</code>。</li><li>2013年12月，<code>Github</code>发布<code>0.6</code>版本，并正式更名为<code>Vue.js</code>。</li><li>2014年2月，在<code>Hacker News</code>网站上时候首次公开。</li><li>2015年10月，<code>Vue.js</code>发布<code>1.0.0</code>版本。</li><li>2016年10月，<code>Vue.js</code>发布<code>2.0</code>版本。</li><li>2020年9月18日，<code>Vue.js</code>发布<code>3.0</code>版本。</li></ul><h2 id="vue版本变化" tabindex="-1"><a class="header-anchor" href="#vue版本变化" aria-hidden="true">#</a> Vue版本变化</h2><p><code>Vue2.0</code>版本和<code>Vue1.0</code>版本之间虽然内部变化非常大，整个渲染层都重写了，但<code>API</code>层面的变化却很小，对开发者来说非常友好，另外<code>Vue2.0</code>版本还引入了很多特性：</p><ul><li><code>Virtual DOM</code>虚拟DOM。</li><li>支持<code>JSX</code>语法。</li><li>支持<code>TypeScript</code>。</li><li>支持服务端渲染<code>ssr</code>。</li><li>提供跨平台能力<code>weex</code>。</li></ul>',5)),o("p",null,[e[10]||(e[10]=o("strong",null,"正确理解虚拟DOM",-1)),e[11]||(e[11]=d("：")),e[12]||(e[12]=o("code",null,"Vue",-1)),e[13]||(e[13]=d("中的虚拟DOM借鉴了开源库")),o("a",p,[e[9]||(e[9]=d("snabbdom")),n(l)]),e[14]||(e[14]=d("的实现，并根据自身特色添加了许多特性。引入虚拟DOM的一个很重要的好处是：绝大部分情况下，组件渲染变得更快了，而少部分情况下反而变慢了。引入虚拟DOM这项技术通常都是在解决一些问题，然而解决一个问题的同时也可能会引入其它问题，这种情况更多的是如何做权衡、如何做取舍。因此，一味的强调虚拟DOM在任何时候都能提高性能这种说法需要正确对待和理解。"))]),e[17]||(e[17]=o("p",null,[o("strong",null,"核心思想"),d("："),o("code",null,"Vue"),d("两大核心思想是"),o("strong",null,"数据驱动"),d("和"),o("strong",null,"组件化"),d("，因此我们在介绍完源码目录设计和整体流程后，会先介绍这两方面。")],-1))])}const x=r(a,[["render",b],["__file","index.html.vue"]]);export{x as default};
