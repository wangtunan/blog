import{_ as s,c as a,b as t,o as p}from"./app-ZJrSjcCF.js";const o="/blog/assets/rag_chroma_server-BuRCit5T.png",e={};function c(l,n){return p(),a("div",null,n[0]||(n[0]=[t(`<h1 id="chroma" tabindex="-1"><a class="header-anchor" href="#chroma"><span>Chroma</span></a></h1><div class="hint-container tip"><p class="hint-container-title">提示</p><p><a href="https://docs.trychroma.com/docs/overview/introduction" target="_blank" rel="noopener noreferrer">Chroma 文档</a></p></div><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><p>执行此命令安装<code>chroma</code>包：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">$ pip <span class="token function">install</span> chromadb</span>
<span class="line"></span></code></pre></div><h2 id="客户端" tabindex="-1"><a class="header-anchor" href="#客户端"><span>客户端</span></a></h2><p><code>Chroma</code>中的客户端一般分为如下几种类型：</p><ul><li><strong>临时客户端(Ephemeral Client)</strong>：数据存储在本地内存中，适合快速验证一些特性。</li><li><strong>持久化客户端(Persistent Client)</strong>：数据存储在本地硬盘中，<code>Chroma</code>在启动时，自动加载硬盘已经存储的数据。</li><li><strong>客户端-服务端模式(Client Server Mode)</strong>：服务端和客户端可分离。</li></ul><h3 id="临时客户端" tabindex="-1"><a class="header-anchor" href="#临时客户端"><span>临时客户端</span></a></h3><p>通过如下代码创建临时客户端：</p><div class="language-python" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">import</span> chromadb</span>
<span class="line"></span>
<span class="line">client <span class="token operator">=</span> chromadb<span class="token punctuation">.</span>EphemeralClient<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h3 id="持久化客户端" tabindex="-1"><a class="header-anchor" href="#持久化客户端"><span>持久化客户端</span></a></h3><p>通过如下代码创建持久化客户端：</p><div class="language-python" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">import</span> chromadb</span>
<span class="line"></span>
<span class="line">client <span class="token operator">=</span> chromadb<span class="token punctuation">.</span>PersistentClient<span class="token punctuation">(</span></span>
<span class="line">  path<span class="token operator">=</span><span class="token string">&quot;./data&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>上述代码执行后会创建一个本地<code>db</code>：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token operator">|</span> - data</span>
<span class="line"><span class="token operator">|</span> - <span class="token operator">|</span> - chroma.sqlite3</span>
<span class="line"></span></code></pre></div><h3 id="服务端-客户端模式" tabindex="-1"><a class="header-anchor" href="#服务端-客户端模式"><span>服务端-客户端模式</span></a></h3><p>通过如下代码启动服务端：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># 默认端口和host</span></span>
<span class="line">$ chroma run <span class="token parameter variable">--path</span> /db_path</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 自定义端口和host</span></span>
<span class="line">$ chroma run <span class="token parameter variable">--host</span> localhost <span class="token parameter variable">--port</span> <span class="token number">80000</span> <span class="token parameter variable">--path</span> /db_path</span>
<span class="line"></span></code></pre></div><p><img src="`+o+`" alt="Chroma Server"></p><p>通过如下代码链接服务端：</p><div class="language-python" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">import</span> chromadb</span>
<span class="line"></span>
<span class="line">client <span class="token operator">=</span> chromadb<span class="token punctuation">.</span>HttpClient<span class="token punctuation">(</span></span>
<span class="line">  host<span class="token operator">=</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  port<span class="token operator">=</span><span class="token number">8080</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h2 id="集合-collection" tabindex="-1"><a class="header-anchor" href="#集合-collection"><span>集合(Collection)</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>Collection</code>是向量数据库中存储一组相似数据的逻辑单元，类似于传统数据库中的表<code>Table</code></p></div><p>集合相关操作如下：</p><div class="language-python" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token comment"># 创建集合(仅创建)</span></span>
<span class="line">collection <span class="token operator">=</span> client<span class="token punctuation">.</span>create_collection<span class="token punctuation">(</span></span>
<span class="line">  name<span class="token operator">=</span><span class="token string">&quot;test_collection&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 创建集合(如果存在则返回，如果不存在则创建)</span></span>
<span class="line">collection <span class="token operator">=</span> client<span class="token punctuation">.</span>get_or_create_collection<span class="token punctuation">(</span></span>
<span class="line">  name<span class="token operator">=</span><span class="token string">&quot;test_collection&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 修改集合名称</span></span>
<span class="line">collection<span class="token punctuation">.</span>modify<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;dev&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 删除集合(不可逆，谨慎操作)</span></span>
<span class="line">client<span class="token punctuation">.</span>delete_collection<span class="token punctuation">(</span></span>
<span class="line">  name<span class="token operator">=</span><span class="token string">&quot;test_collection&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 集合其它方法</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>collection<span class="token punctuation">.</span>peek<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 返回一组items列表</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>collection<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 返回items的数量</span></span>
<span class="line"></span></code></pre></div><h2 id="集合数据-collection-data" tabindex="-1"><a class="header-anchor" href="#集合数据-collection-data"><span>集合数据(Collection Data)</span></a></h2><p>在操作集合数据时，有如下几个关键参数：</p><ul><li><strong>documents</strong>: 可选，与<code>embeddings</code>不能同时为空，原始文档对象的列表。</li><li><strong>embeddings</strong>：可选，与<code>documents</code>不能同时为空，一组向量列表。</li><li><strong>metadatas</strong>：可选，元数据列表，需要和<code>documents</code> 和 <code>embeddings</code>在维度上相同。</li><li><strong>ids</strong>：必填，一组唯一<code>id</code>的列表，需要和<code>documents</code> 和 <code>embeddings</code>在维度上相同。</li></ul><h3 id="添加集合数据" tabindex="-1"><a class="header-anchor" href="#添加集合数据"><span>添加集合数据</span></a></h3><div class="language-python" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token comment"># 添加数据</span></span>
<span class="line">collection<span class="token punctuation">.</span>add<span class="token punctuation">(</span></span>
<span class="line">  documents<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;Vue.js&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;React.js&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Svelte.js&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  metadatas<span class="token operator">=</span><span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span> <span class="token string">&quot;framework&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;FE&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;version&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;2.7&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span> <span class="token string">&quot;framework&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;FE&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;version&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;18.0&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span> <span class="token string">&quot;framework&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;FE&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;version&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;5.0&quot;</span> <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  ids<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;id1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id3&quot;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>collection<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h3 id="更新集合数据" tabindex="-1"><a class="header-anchor" href="#更新集合数据"><span>更新集合数据</span></a></h3><div class="language-python" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token comment"># 同时更新document和metadata</span></span>
<span class="line">collection<span class="token punctuation">.</span>update<span class="token punctuation">(</span></span>
<span class="line">  ids<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;id1&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  documents<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;Vue.js&quot;</span><span class="token punctuation">]</span></span>
<span class="line">  metadatas<span class="token operator">=</span><span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span> <span class="token string">&quot;framework&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;FE&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;version&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;3.0&quot;</span> <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 插入数据</span></span>
<span class="line">collection<span class="token punctuation">.</span>upsert<span class="token punctuation">(</span></span>
<span class="line">  documents<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;Angular.js&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  metadatas<span class="token operator">=</span><span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span> <span class="token string">&quot;framework&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;FE&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;version&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;20.0&quot;</span> <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  ids<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;id4&quot;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h3 id="删除集合数据" tabindex="-1"><a class="header-anchor" href="#删除集合数据"><span>删除集合数据</span></a></h3><div class="language-python" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token comment"># ids可选，如果不提供，则删除满足where条件所有的数据</span></span>
<span class="line">collection<span class="token punctuation">.</span>delete<span class="token punctuation">(</span></span>
<span class="line">  ids<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;id3&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  where<span class="token operator">=</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;version&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;5.0&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h2 id="查询集合-query-collection" tabindex="-1"><a class="header-anchor" href="#查询集合-query-collection"><span>查询集合(Query Collection)</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p><a href="https://docs.trychroma.com/reference/python/collection#query" target="_blank" rel="noopener noreferrer">Collection Query API 文档</a> <br><a href="https://docs.trychroma.com/reference/python/collection#get" target="_blank" rel="noopener noreferrer">Collection Get API 文档</a></p></div><div class="language-python" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token comment"># 根据查询内容查询</span></span>
<span class="line">result <span class="token operator">=</span> collection<span class="token punctuation">.</span>query<span class="token punctuation">(</span></span>
<span class="line">  query_texts<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;Vue.js&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  n_results<span class="token operator">=</span><span class="token number">1</span> <span class="token comment"># 仅返回最匹配的一项</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 根据id查询</span></span>
<span class="line">result <span class="token operator">=</span> collection<span class="token punctuation">.</span>get<span class="token punctuation">(</span></span>
<span class="line">  ids<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;id1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id3&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  where<span class="token operator">=</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;version&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;3.0&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h2 id="元数据过滤-metadata-filter" tabindex="-1"><a class="header-anchor" href="#元数据过滤-metadata-filter"><span>元数据过滤(Metadata Filter)</span></a></h2><p>在查询时，可以对元数据(<code>metadata</code>)进行过滤，在<code>Chroma</code>中支持的操作符如下：</p><table><thead><tr><th>类型</th><th>操作符</th><th>含义</th><th>示例</th></tr></thead><tbody><tr><td>数值比较</td><td><code>$eq</code></td><td>等于</td><td><code>&quot;age&quot;: { &quot;$eq&quot;: 25 }</code></td></tr><tr><td>数值比较</td><td><code>$ne</code></td><td>不等于</td><td><code>&quot;status&quot;: { &quot;$ne&quot;: &quot;A&quot; }</code></td></tr><tr><td>数值比较</td><td><code>$gt</code></td><td>大于</td><td><code>&quot;score&quot;: { &quot;$gt&quot;: 70 }</code></td></tr><tr><td>数值比较</td><td><code>$gte</code></td><td>大于等于</td><td><code>&quot;score&quot;: { &quot;$gte&quot;: 70 }</code></td></tr><tr><td>数值比较</td><td><code>$lt</code></td><td>小于</td><td><code>&quot;price&quot;: { &quot;$lt&quot;: 100 }</code></td></tr><tr><td>数值比较</td><td><code>$lte</code></td><td>小于等于</td><td><code>&quot;price&quot;: { &quot;$lte&quot;: 100 }</code></td></tr><tr><td>集合判断</td><td><code>$in</code></td><td>在集合内（包含）</td><td><code>&quot;tags&quot;: { &quot;$in&quot;: [&quot;red&quot;, &quot;blue&quot;] }</code></td></tr><tr><td>集合判断</td><td><code>$nin</code></td><td>不在集合内</td><td><code>&quot;tags&quot;: { &quot;$nin&quot;: [&quot;green&quot;, &quot;yellow&quot;] }</code></td></tr><tr><td>逻辑判断</td><td><code>$and</code></td><td>与</td><td><code>&quot;$and&quot;: [{ &quot;age&quot;: { &quot;$gt&quot;: 20 } }, { &quot;status&quot;: &quot;A&quot; }]</code></td></tr><tr><td>逻辑判断</td><td><code>$or</code></td><td>或</td><td><code>&quot;$or&quot;: [{ &quot;status&quot;: &quot;A&quot; }, { &quot;score&quot;: { &quot;$lt&quot;: 60 } }]</code></td></tr><tr><td>逻辑判断</td><td><code>$not</code></td><td>非</td><td><code>&quot;age&quot;: { &quot;$not&quot;: { &quot;$gte&quot;: 18 } }</code></td></tr></tbody></table><div class="language-python" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line">collection<span class="token punctuation">.</span>add<span class="token punctuation">(</span></span>
<span class="line">  documents<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;Vue.js&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;React.js&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Svelte.js&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  metadatas<span class="token operator">=</span><span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span> <span class="token string">&quot;framework&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;FE&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;version&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;2.7&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span> <span class="token string">&quot;framework&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;FE&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;version&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;18.0&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span> <span class="token string">&quot;framework&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;FE&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;version&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;5.0&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">12</span> <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  ids<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;id1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id3&quot;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">version_result <span class="token operator">=</span> collection<span class="token punctuation">.</span>get<span class="token punctuation">(</span></span>
<span class="line">  where<span class="token operator">=</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;version&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token string">&quot;$in&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;5.0&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;18.0&quot;</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>version_result<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;ids&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># [&#39;id2&#39;, &#39;id3&#39;]</span></span>
<span class="line"></span>
<span class="line">age_result <span class="token operator">=</span> collection<span class="token punctuation">.</span>get<span class="token punctuation">(</span></span>
<span class="line">  where<span class="token operator">=</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token string">&quot;$gte&quot;</span><span class="token punctuation">:</span> <span class="token number">12</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>age_result<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;ids&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># [&#39;id3&#39;]</span></span>
<span class="line"></span></code></pre></div><h2 id="自定义embedding" tabindex="-1"><a class="header-anchor" href="#自定义embedding"><span>自定义Embedding</span></a></h2><h2 id="多模态-multimodal" tabindex="-1"><a class="header-anchor" href="#多模态-multimodal"><span>多模态(MultiModal)</span></a></h2>`,44)]))}const i=s(e,[["render",c]]),r=JSON.parse('{"path":"/rag/vectorStore/chroma/","title":"Chroma","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1752938097000,"contributors":[{"name":"wangtunan","username":"wangtunan","email":"why583440138@gmail.com","commits":1,"url":"https://github.com/wangtunan"}],"changelog":[{"hash":"2b8a9756d0acd6704eb18959eb16b6d25351dcdc","time":1752938097000,"email":"why583440138@gmail.com","author":"wangtunan","message":"blog RAG结构化文档向量存储文章撰写"}]},"filePathRelative":"rag/vectorStore/chroma/README.md"}');export{i as comp,r as data};
