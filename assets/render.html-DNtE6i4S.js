import{_ as s,c as a,b as e,o as t}from"./app-DnxTA_sf.js";const c="/blog/assets/renderMixin-Zqkl71R5.png",o={};function p(i,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="rendermixin流程" tabindex="-1"><a class="header-anchor" href="#rendermixin流程"><span>renderMixin流程</span></a></h1><p>相比于以上几种方法，<code>renderMixin</code>是最简单的，它主要在<code>Vue.prototype</code>上定义各种私有方法和一个非常重要的实例方法：<code>$nextTick</code>，其精简代码如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">renderMixin</span> <span class="token punctuation">(</span><span class="token parameter">Vue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 挂载各种私有方法，例如this._c，this._v等</span></span>
<span class="line">  <span class="token function">installRenderHelpers</span><span class="token punctuation">(</span><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span></span>
<span class="line">  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">_render</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 实例方法</span></span>
<span class="line">  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$nextTick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token function">nextTick</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码分析：</p><ul><li><code>installRenderHelpers</code>：它会在<code>Vue.prototype</code>上挂载各种私有方法，例如<code>this._n = toNumber</code>、<code>this._s = toString</code>、<code>this._v = createTextVNode</code>和<code>this._e = createEmptyVNode</code>。</li><li><code>_render()</code>：<code>_render()</code>方法会把模板编译成<code>VNode</code>，我们会在其后的编译章节详细介绍。</li><li><code>nextTick</code>：就像我们之前介绍过的，<code>nextTick</code>会在<code>Vue</code>构造函数上挂载一个全局的<code>nextTick()</code>方法，而此处为实例方法，本质上引用的是同一个<code>nextTick</code>。</li></ul><p>在以上代码分析完毕后，我们可以得到<code>renderMixin</code>如下流程图：</p><div style="text-align:center;"><img src="`+c+'"></div>',7)]))}const r=s(o,[["render",p]]),d=JSON.parse('{"path":"/vueAnalysis/entry/render.html","title":"renderMixin流程","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1746545772000,"contributors":[{"name":"wangtunan","username":"wangtunan","email":"why583440138@gmail.com","commits":1,"url":"https://github.com/wangtunan"}],"changelog":[{"hash":"0819d3a24b098b91020da2fcc54ff0badcec7ca3","time":1746545772000,"email":"why583440138@gmail.com","author":"wangtunan","message":"blog RAG结构化文档导入文章撰写"}]},"filePathRelative":"vueAnalysis/entry/render.md"}');export{r as comp,d as data};
